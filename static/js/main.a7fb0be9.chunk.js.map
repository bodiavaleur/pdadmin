{"version":3,"sources":["api.js","PdAdmin.jsx","index.js"],"names":["axs","require","create","baseURL","mode","withCredentials","referrer","X-Remote-IP","referrerPolicy","headers","accept","content-type","models","getStatistics","cb","today","Date","tomorrow","setDate","getDate","todayDate","year","getFullYear","month","getMonth","day","getHours","tomorrowDate","Promise","all","map","model","id","url","concat","method","then","r","e","data","x","PdAdmin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","total","balances","flat","operator","parseFloat","bonuses","setState","reduce","a","b","_this2","react_default","createElement","style","display","lady","backgroundColor","setBalanceColor","Math","round","_this3","setInterval","getTotal","console","log","showOperatorsBalance","Component","ReactDOM","render","src_PdAdmin","document","getElementById"],"mappings":"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","file":"static/js/main.a7fb0be9.chunk.js","sourcesContent":["const axios = require(\"axios\");\r\n\r\nconst axs = axios.create({\r\n  baseURL: \"https://api.prime.date\",\r\n  mode: \"cors\",\r\n  withCredentials: true,\r\n  referrer: \"https://prime.date/\",\r\n  \"X-Remote-IP\": \"127.0.0.1\",\r\n  referrerPolicy: \"no-referrer-when-downgrade\",\r\n  headers: { accept: \"application/json\", \"content-type\": \"application/json\" }\r\n});\r\n\r\nconst models = [\r\n  36516324,\r\n  8304691,\r\n  24789739,\r\n  31596719,\r\n  5660047,\r\n  36067275,\r\n  36064530,\r\n  36063606,\r\n  38153955,\r\n  38154561,\r\n  15403705,\r\n  36667225,\r\n  39368872,\r\n  28262217,\r\n  14824059,\r\n  14217338,\r\n  4559434,\r\n  39166856,\r\n  25541235,\r\n  2765367,\r\n  17415843\r\n];\r\n\r\nexport const getStatistics = cb => {\r\n  const today = new Date();\r\n  const tomorrow = new Date();\r\n  tomorrow.setDate(today.getDate() + 1);\r\n\r\n  let todayDate = {\r\n    year: today.getFullYear(),\r\n    month: today.getMonth() + 1,\r\n    day: today.getHours() < 3 ? today.getDate() - 1 : today.getDate()\r\n  };\r\n\r\n  let tomorrowDate = {\r\n    year: tomorrow.getFullYear(),\r\n    month: tomorrow.getMonth() + 1,\r\n    day: tomorrow.getDate()\r\n  };\r\n\r\n  const fetchStats = id =>\r\n    axs({\r\n      url: `/statistic/agency?dateFrom=${todayDate.year}-${todayDate.month}-${todayDate.day}&dateTo=${tomorrowDate.year}-${tomorrowDate.month}-${tomorrowDate.day}&groupByDate=0&idLady=${id}`,\r\n      method: \"GET\"\r\n    });\r\n\r\n  Promise.all(models.map(model => fetchStats(model))).then(r =>\r\n    cb(r.map(e => e.data.data.map(x => x)))\r\n  );\r\n};\r\n\r\nexport const getModels = cb => {\r\n  const parseModel = id =>\r\n    axs({\r\n      url: `https://api.prime.date/operator/get-female/${id}`\r\n    });\r\n\r\n  Promise.all(models.map(model => parseModel(model))).then(data =>\r\n    cb(data.map(x => x.data.data))\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { getStatistics, getModel, getModels } from \"./api\";\r\n\r\nclass PdAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      total: 0,\r\n      balances: []\r\n    };\r\n  }\r\n\r\n  getTotal(data) {\r\n    const total = data\r\n      .map(x => x)\r\n      .flat()\r\n      .map(operator => parseFloat(operator.bonuses));\r\n    return this.setState({ total: total.reduce((a, b) => a + b) });\r\n  }\r\n\r\n  setBalanceColor(bonuses) {\r\n    // const red = (bonuses < 30) && 'red'\r\n    // const orange =  (bonuses > 30 && bonuses < 50) && 'orange'\r\n    // const green = (bonuses > 50 && bonuses < 100) && 'green'\r\n    switch (true) {\r\n      case bonuses < 30:\r\n        return \"red\";\r\n      case bonuses > 30 && bonuses < 50:\r\n        return \"orange\";\r\n      case bonuses > 50 && bonuses < 100:\r\n        return \"green\";\r\n      case bonuses > 100 && bonuses < 150:\r\n        return \"blue\";\r\n      case bonuses > 150 && bonuses < 200:\r\n        return \"pink\";\r\n\r\n      default:\r\n        return \"white\";\r\n    }\r\n  }\r\n\r\n  showOperatorsBalance() {\r\n    return this.state.balances.map(operator => (\r\n      <div style={{ display: \"flex\" }}>\r\n        <div>{operator.id}</div>\r\n        <div>{operator.lady}</div>\r\n        <div\r\n          style={{ backgroundColor: this.setBalanceColor(operator.bonuses) }}\r\n        >\r\n          {operator.bonuses + \"$\"}\r\n        </div>\r\n        <div>{Math.round(operator.bonuses / 0.055)}</div>\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  componentDidMount() {\r\n    setInterval(\r\n      () =>\r\n        getStatistics(data => {\r\n          this.setState({ balances: data.flat() });\r\n          this.getTotal(data);\r\n        }),\r\n      2000\r\n    );\r\n  }\r\n\r\n  render() {\r\n    console.log(\"this.state\", this.state);\r\n    return (\r\n      <div>\r\n        {this.showOperatorsBalance()}\r\n        <div>TOTAL: {this.state.total}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PdAdmin;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PdAdmin from \"./PdAdmin\";\n\nReactDOM.render(<PdAdmin />, document.getElementById(\"root\"));\n"],"sourceRoot":""}