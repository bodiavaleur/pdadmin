{"version":3,"sources":["api.js","ui/atoms/OperatorRow.js","components/Operator.js","ui/UseGlobalStyle.js","PdAdmin.jsx","index.js"],"names":["axs","require","create","baseURL","mode","withCredentials","referrer","X-Remote-IP","referrerPolicy","headers","accept","content-type","OperatorRow","styled","tr","_templateObject","props","color","Operator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentBonuses","status","balanceNorm","checkBalance","bind","assertThisInitialized","onChangeRange","value","setState","balance","bonuses","normLess","normMore","console","log","setInterval","react_default","a","createElement","key","operator","beforeShift","style","width","lib_default","min","max","step","tooltip","onChange","Component","UseGlobalStyle","createGlobalStyle","UseGlobalStyle_templateObject","PdAdmin","data","setBeforeShift","setStatistics","map","x","parseFloat","reduce","b","totalBefore","localStorage","setItem","_this2","ourProfiles","arguments","length","undefined","cb","today","Date","tomorrow","setDate","getDate","todayDate","year","getFullYear","month","getMonth","day","getHours","tomorrowDate","url","concat","method","then","response","getStatistics","resData","filter","includes","_this3","getItem","split","_this4","profile","idx","Operator_Operator","getTotal","onClick","ReactDOM","render","src_PdAdmin","document","getElementById"],"mappings":"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","file":"static/js/main.d814973c.chunk.js","sourcesContent":["const axios = require(\"axios\");\r\n\r\nconst axs = axios.create({\r\n  baseURL: \"https://api.prime.date\",\r\n  mode: \"cors\",\r\n  withCredentials: true,\r\n  referrer: \"https://prime.date/\",\r\n  \"X-Remote-IP\": \"127.0.0.1\",\r\n  referrerPolicy: \"no-referrer-when-downgrade\",\r\n  headers: { accept: \"application/json\", \"content-type\": \"application/json\" }\r\n});\r\n\r\nexport const getStatistics = cb => {\r\n  const today = new Date();\r\n  const tomorrow = new Date();\r\n  tomorrow.setDate(today.getDate() + 1);\r\n\r\n  let todayDate = {\r\n    year: today.getFullYear(),\r\n    month: today.getMonth() + 1,\r\n    day: today.getHours() < 3 ? today.getDate() - 1 : today.getDate()\r\n  };\r\n\r\n  let tomorrowDate = {\r\n    year: tomorrow.getFullYear(),\r\n    month: tomorrow.getMonth() + 1,\r\n    day: tomorrow.getDate()\r\n  };\r\n\r\n  axs({\r\n    url: `/statistic/agency?dateFrom=${todayDate.year}-${todayDate.month}-${\r\n      todayDate.day\r\n    }&dateTo=${tomorrowDate.year}-${tomorrowDate.month}-${\r\n      tomorrowDate.day\r\n    }&groupByDate=1`,\r\n    method: \"GET\"\r\n  }).then(response => cb(response.data.data));\r\n};\r\n","import styled from 'styled-components'\n\nexport const OperatorRow = styled.tr`\n\tbackground-color: ${props => props.color};\n`","import React, { Component } from \"react\";\nimport {OperatorRow} from '../ui/atoms/'\nimport Slider from \"react-rangeslider\";\n\n\nexport default class Operator extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tcurrentBonuses: 0,\n\t\t\tcolor: 'none',\n\t\t\tstatus: '',\n\t\t\tbalanceNorm: 0\n\t\t}\n\n\t\tthis.checkBalance = this.checkBalance.bind(this)\n\t\tthis.onChangeRange = this.onChangeRange.bind(this)\n\t}\n\n\tonChangeRange(value) {\n\t\treturn this.setState({balanceNorm: value})\n \t}\n\n\tcheckBalance() {\n\t\tconst balance = this.props.bonuses - this.state.currentBonuses\n\t\tconst normLess = this.state.balanceNorm * 0.9\n\t\tconst normMore = this.state.balanceNorm * 1.1\n\t\tlet color = ''\n\t\tlet status = ''\n\n\n\t\t\tif (balance === 0){\n\t\t\t\tcolor = 'white'\n\t\t\t\tstatus = ''\n\t\t\t} else if(normLess < balance < normMore) {\t\t\t\t\n\t\t\t\tcolor = 'rgb(255,149,0)';\n\t\t\t\tstatus = 'НАМАНА'\n\t\t\t} else if(balance > this.state.balanceNorm) {\n\t\t\t\tcolor = 'rgb(52,199,89)';\n\t\t\t\tstatus = 'КРАСАВА'\t\t\t\t\n\t\t\t} else if(balance < this.state.balanceNorm) {\n\t\t\t\tcolor = 'rgb(255,59,48)';\n\t\t\t\tstatus = 'ПИЗДЮЛЕЙ'\n\t\t\t}\n\n\t\t\tconsole.log(balance)\n\n\t\treturn this.setState({color: color, currentBonuses: this.props.bonuses, status: status})\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({currentBonuses: this.props.bonuses})\n    \tsetInterval(this.checkBalance, 1800000);\n\t}\n\n\trender() {\n\t\tconst balanceNorm = this.state.balanceNorm\n\t\treturn(\n\t\t\t<OperatorRow key={this.props.operator} color={this.state.color}>\n                <td>{this.props.operator}</td>\n                <td>{this.props.bonuses}</td>\n                <td>{this.props.beforeShift}</td>\n                <td style={{width: '100px'}}>\n                \t<Slider\n                      min={0}\n                      max={25}\n                      step={0.5}\n                      value={balanceNorm}\n                      tooltip={true}\n                      onChange={this.onChangeRange}\n                    />\n                    <span>{balanceNorm}</span>\n                </td>\n                <td>{!!this.state.status ? this.state.status : ''}</td>\n            </OperatorRow>\n        )\n\t}\n}","import { createGlobalStyle } from \"styled-components\";\n\nexport const UseGlobalStyle = createGlobalStyle`\n\t.rangeslider-horizontal {\n    background: white !important;\n    width: 100px !important;\n    height: 8px !important;\n  }\n\n  .rangeslider__fill {\n    background: rgb(10, 132, 255) !important;\n  }\n\n  .rangeslider__handle {\n    width: 20px !important;\n    height: 20px !important;\n\n    ::after {\n      display: none !important;\n    }\n  }\n`","import React, { Component } from \"react\";\r\nimport { getStatistics } from \"./api\";\r\nimport Operator from './components/Operator'\r\nimport {UseGlobalStyle} from './ui/UseGlobalStyle'\r\n\r\nclass PdAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n      beforeShift: [],\r\n    };\r\n\r\n    this.setBeforeShift = this.setBeforeShift.bind(this);\r\n    this.setStatistics = this.setStatistics.bind(this);\r\n  }\r\n\r\n  getTotal() {\r\n    const total = this.state.data.map(x => parseFloat(x.bonuses));\r\n    return total.reduce((a, b) => a + b);\r\n  }\r\n\r\n  setBeforeShift() {\r\n    const totalBefore = this.state.data.map(x => parseFloat(x.bonuses));\r\n    localStorage.setItem(\"beforeShift\", totalBefore);\r\n    this.setState({ beforeShift: totalBefore });\r\n  }\r\n\r\n  setStatistics(update = false) {\r\n    const ourProfiles = [\r\n      \"svistunova_beb777@ukr.net\",\r\n      \"katerinamalenkaya@rambler.ru\",\r\n      \"anastasiyatrius@rambler.ru\",\r\n      \"margaritasmelyanskaya@rambler.ru\",\r\n      \"vorobetskaterina@rambler.ru\",\r\n      \"boykoanastasia@rambler.ru\",\r\n      \"romanovadasha7@rambler.ru\",\r\n      \"vladimirivnaanna@rambler.ru\",\r\n      \"oksanaotiry@rambler.ru\"\r\n    ];\r\n\r\n    getStatistics(resData => {\r\n      let data = resData.filter(x => ourProfiles.includes(x.operator));\r\n\r\n      this.setState({ data: data });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    setInterval(() => this.setStatistics(true), 2000);\r\n    return localStorage.getItem(\"beforeShift\")\r\n      ? this.setState({\r\n          beforeShift: localStorage.getItem(\"beforeShift\").split(\",\")\r\n        })\r\n      : null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <UseGlobalStyle />\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Profile</th>\r\n              <th>Bonuses</th>\r\n              {!!this.state.beforeShift && <th>Start shift</th>}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.data.map((profile, idx) => (\r\n                <Operator \r\n                  operator={profile.operator}\r\n                  bonuses={profile.bonuses}\r\n                  beforeShift={!!this.state.beforeShift ? this.state.beforeShift[idx] : 0}>\r\n                </Operator> \r\n            ))}\r\n            {!!this.state.data.length && (\r\n              <tr>\r\n                <td>TOTAL: {this.getTotal()}</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        <button onClick={this.setBeforeShift}>Start shift</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PdAdmin;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PdAdmin from \"./PdAdmin\";\nimport 'react-rangeslider/lib/index.css'\n\nReactDOM.render(<PdAdmin />, document.getElementById(\"root\"));\n"],"sourceRoot":""}