{"version":3,"sources":["api.js","PdAdmin.jsx","index.js"],"names":["axs","require","create","baseURL","mode","withCredentials","referrer","X-Remote-IP","referrerPolicy","headers","accept","content-type","PdAdmin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","beforeShift","setBeforeShift","bind","assertThisInitialized","setStatistics","map","x","parseFloat","bonuses","reduce","a","b","totalBefore","localStorage","setItem","setState","_this2","ourProfiles","arguments","length","undefined","cb","today","Date","tomorrow","setDate","getDate","todayDate","year","getFullYear","month","getMonth","day","getHours","tomorrowDate","url","concat","method","then","response","getStatistics","resData","filter","includes","operator","_this3","setInterval","getItem","split","_this4","react_default","createElement","profile","idx","Fragment","key","getTotal","onClick","Component","ReactDOM","render","src_PdAdmin","document","getElementById"],"mappings":"wNAEMA,EAFQC,EAAQ,IAEJC,OAAO,CACvBC,QAAS,yBACTC,KAAM,OACNC,iBAAiB,EACjBC,SAAU,sBACVC,cAAe,YACfC,eAAgB,6BAChBC,QAAS,CAAEC,OAAQ,mBAAoBC,eAAgB,sBCmF1CC,cAxFb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,KAAM,GACNC,YAAa,IAGfT,EAAKU,eAAiBV,EAAKU,eAAeC,KAApBV,OAAAW,EAAA,EAAAX,CAAAD,IACtBA,EAAKa,cAAgBb,EAAKa,cAAcF,KAAnBV,OAAAW,EAAA,EAAAX,CAAAD,IATJA,0EAcjB,OADcG,KAAKI,MAAMC,KAAKM,IAAI,SAAAC,GAAC,OAAIC,WAAWD,EAAEE,WACvCC,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,6CAIlC,IAAMC,EAAclB,KAAKI,MAAMC,KAAKM,IAAI,SAAAC,GAAC,OAAIC,WAAWD,EAAEE,WAC1DK,aAAaC,QAAQ,cAAeF,GACpClB,KAAKqB,SAAS,CAAEf,YAAaY,4CAGD,IAAAI,EAAAtB,KACtBuB,GADsBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACR,CAClB,4BACA,+BACA,6BACA,mCACA,8BACA,4BACA,4BACA,8BACA,4BDzBuB,SAAAG,GAC3B,IAAMC,EAAQ,IAAIC,KACZC,EAAW,IAAID,KACrBC,EAASC,QAAQH,EAAMI,UAAY,GAEnC,IAAIC,EAAY,CACdC,KAAMN,EAAMO,cACZC,MAAOR,EAAMS,WAAa,EAC1BC,IAAKV,EAAMW,WAAa,EAAIX,EAAMI,UAAY,EAAIJ,EAAMI,WAGtDQ,EAAe,CACjBN,KAAMJ,EAASK,cACfC,MAAON,EAASO,WAAa,EAC7BC,IAAKR,EAASE,WAGhBjD,EAAI,CACF0D,IAAG,8BAAAC,OAAgCT,EAAUC,KAA1C,KAAAQ,OAAkDT,EAAUG,MAA5D,KAAAM,OACDT,EAAUK,IADT,YAAAI,OAEQF,EAAaN,KAFrB,KAAAQ,OAE6BF,EAAaJ,MAF1C,KAAAM,OAGDF,EAAaF,IAHZ,kBAKHK,OAAQ,QACPC,KAAK,SAAAC,GAAQ,OAAIlB,EAAGkB,EAASxC,KAAKA,QCInCyC,CAAc,SAAAC,GACZ,IAAI1C,EAAO0C,EAAQC,OAAO,SAAApC,GAAC,OAAIW,EAAY0B,SAASrC,EAAEsC,YAEtD5B,EAAKD,SAAS,CAAEhB,KAAMA,kDAIN,IAAA8C,EAAAnD,KAElB,OADAoD,YAAY,kBAAMD,EAAKzC,eAAc,IAAO,KACrCS,aAAakC,QAAQ,eACxBrD,KAAKqB,SAAS,CACZf,YAAaa,aAAakC,QAAQ,eAAeC,MAAM,OAEzD,sCAGG,IAAAC,EAAAvD,KACP,OACEwD,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAAA,aACED,EAAAxC,EAAAyC,cAAA,aACED,EAAAxC,EAAAyC,cAAA,UACED,EAAAxC,EAAAyC,cAAA,qBACAD,EAAAxC,EAAAyC,cAAA,uBACGzD,KAAKI,MAAME,aAAekD,EAAAxC,EAAAyC,cAAA,2BAGjCD,EAAAxC,EAAAyC,cAAA,aACGzD,KAAKI,MAAMC,KAAKM,IAAI,SAAC+C,EAASC,GAAV,OACnBH,EAAAxC,EAAAyC,cAACD,EAAAxC,EAAM4C,SAAP,KACEJ,EAAAxC,EAAAyC,cAAA,MAAII,IAAKF,GACPH,EAAAxC,EAAAyC,cAAA,UAAKC,EAAQR,UACbM,EAAAxC,EAAAyC,cAAA,UAAKC,EAAQ5C,WACVyC,EAAKnD,MAAME,aACZkD,EAAAxC,EAAAyC,cAAA,UAAKF,EAAKnD,MAAME,YAAYqD,UAKjC3D,KAAKI,MAAMC,KAAKoB,QACjB+B,EAAAxC,EAAAyC,cAAA,UACED,EAAAxC,EAAAyC,cAAA,oBAAYzD,KAAK8D,eAKzBN,EAAAxC,EAAAyC,cAAA,UAAQM,QAAS/D,KAAKO,gBAAtB,wBAnFcyD,aCCtBC,IAASC,OAAOV,EAAAxC,EAAAyC,cAACU,EAAD,MAAaC,SAASC,eAAe","file":"static/js/main.96f4c711.chunk.js","sourcesContent":["const axios = require(\"axios\");\r\n\r\nconst axs = axios.create({\r\n  baseURL: \"https://api.prime.date\",\r\n  mode: \"cors\",\r\n  withCredentials: true,\r\n  referrer: \"https://prime.date/\",\r\n  \"X-Remote-IP\": \"127.0.0.1\",\r\n  referrerPolicy: \"no-referrer-when-downgrade\",\r\n  headers: { accept: \"application/json\", \"content-type\": \"application/json\" }\r\n});\r\n\r\nexport const getStatistics = cb => {\r\n  const today = new Date();\r\n  const tomorrow = new Date();\r\n  tomorrow.setDate(today.getDate() + 1);\r\n\r\n  let todayDate = {\r\n    year: today.getFullYear(),\r\n    month: today.getMonth() + 1,\r\n    day: today.getHours() < 3 ? today.getDate() - 1 : today.getDate()\r\n  };\r\n\r\n  let tomorrowDate = {\r\n    year: tomorrow.getFullYear(),\r\n    month: tomorrow.getMonth() + 1,\r\n    day: tomorrow.getDate()\r\n  };\r\n\r\n  axs({\r\n    url: `/statistic/agency?dateFrom=${todayDate.year}-${todayDate.month}-${\r\n      todayDate.day\r\n    }&dateTo=${tomorrowDate.year}-${tomorrowDate.month}-${\r\n      tomorrowDate.day\r\n    }&groupByDate=1`,\r\n    method: \"GET\"\r\n  }).then(response => cb(response.data.data));\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { getStatistics } from \"./api\";\r\n\r\nclass PdAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n      beforeShift: []\r\n    };\r\n\r\n    this.setBeforeShift = this.setBeforeShift.bind(this);\r\n    this.setStatistics = this.setStatistics.bind(this);\r\n  }\r\n\r\n  getTotal() {\r\n    const total = this.state.data.map(x => parseFloat(x.bonuses));\r\n    return total.reduce((a, b) => a + b);\r\n  }\r\n\r\n  setBeforeShift() {\r\n    const totalBefore = this.state.data.map(x => parseFloat(x.bonuses));\r\n    localStorage.setItem(\"beforeShift\", totalBefore);\r\n    this.setState({ beforeShift: totalBefore });\r\n  }\r\n\r\n  setStatistics(update = false) {\r\n    const ourProfiles = [\r\n      \"svistunova_beb777@ukr.net\",\r\n      \"katerinamalenkaya@rambler.ru\",\r\n      \"anastasiyatrius@rambler.ru\",\r\n      \"margaritasmelyanskaya@rambler.ru\",\r\n      \"vorobetskaterina@rambler.ru\",\r\n      \"boykoanastasia@rambler.ru\",\r\n      \"romanovadasha7@rambler.ru\",\r\n      \"vladimirivnaanna@rambler.ru\",\r\n      \"oksanaotiry@rambler.ru\"\r\n    ];\r\n\r\n    getStatistics(resData => {\r\n      let data = resData.filter(x => ourProfiles.includes(x.operator));\r\n\r\n      this.setState({ data: data });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    setInterval(() => this.setStatistics(true), 2000);\r\n    return localStorage.getItem(\"beforeShift\")\r\n      ? this.setState({\r\n          beforeShift: localStorage.getItem(\"beforeShift\").split(\",\")\r\n        })\r\n      : null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Profile</th>\r\n              <th>Bonuses</th>\r\n              {!!this.state.beforeShift && <th>Start shift</th>}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.data.map((profile, idx) => (\r\n              <React.Fragment>\r\n                <tr key={idx}>\r\n                  <td>{profile.operator}</td>\r\n                  <td>{profile.bonuses}</td>\r\n                  {!!this.state.beforeShift && (\r\n                    <td>{this.state.beforeShift[idx]}</td>\r\n                  )}\r\n                </tr>\r\n              </React.Fragment>\r\n            ))}\r\n            {!!this.state.data.length && (\r\n              <tr>\r\n                <td>TOTAL: {this.getTotal()}</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        <button onClick={this.setBeforeShift}>Before shift</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PdAdmin;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PdAdmin from \"./PdAdmin\";\n\nReactDOM.render(<PdAdmin />, document.getElementById(\"root\"));\n"],"sourceRoot":""}